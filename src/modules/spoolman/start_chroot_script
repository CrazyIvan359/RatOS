#!/usr/bin/env bash

#### Spoolman - Keep track of your inventory of 3D-printer filament spools
####
#### Written by Mike Murton aka CrazyIvan359
#### Copyright 2024
####
#### This File is distributed under GPLv3
####

# shellcheck enable=requires-variable-braces

# Error handling
set -Ee

# shellcheck disable=SC1091
source /common.sh
install_cleanup_trap

# Module only Variables
SPOOLMAN_SRC_URL=$(curl -s https://api.github.com/repos/Donkie/Spoolman/releases/latest | jq -r '.assets[] | select(.name == "spoolman.zip").browser_download_url')
SPOOLMAN_PKG_TMP="spoolman_tmp.zip"

echo_green "Installing spoolman ..."

## Force apt update
apt-get update
## Make sure required packages are installed
check_install_pkgs curl python3-pip python3-venv libpq-dev unzip

## Step 1: Move to Home Dir as WorkingDirectoy
pushd "/home/${BASE_USER}" &> /dev/null || exit 1

## Step 2: Download spoolman
echo_green "Download latest spoolman package ..."
curl -sSL "${SPOOLMAN_SRC_URL}" -o "${SPOOLMAN_PKG_TMP}"

## Step 3: Unzip install package
echo_green "Unpacking spoolman package ..."
unzip "${SPOOLMAN_PKG_TMP}" -d "${SPOOLMAN_INSTALL_DIR}"
rm "${SPOOLMAN_PKG_TMP}"

## Step 4: Move to spoolman as working directory
pushd "${SPOOLMAN_INSTALL_DIR}" &> /dev/null || exit 1

## Step 5: Install python packages
echo_green "Installing global python packages ..."
pip3 install --user setuptools wheel

## Step 6: Build python virtualenv
echo_green "Building python venv ..."
python3 -m venv .venv
# shellcheck disable=SC1091
source .venv/bin/activate
pip3 install -r requirements.txt
deactivate

## Step 7: Unpack files
echo_green "Unpacking files ..."
unpack /filesystem/root /

## Step 8: Install service
echo_green "Installing systemd service ..."
chmod +x scripts/start.sh
sed -i 's|%USER%|'"${BASE_USER}"'|g;s|%INSTALL_DIR%|'"${SPOOLMAN_INSTALL_DIR}"'|g' "/usr/lib/systemd/system/spoolman.service"
systemctl_if_exists daemon-reload
systemctl_if_exists enable spoolman.service

## Step 9: Update env file
if [ ! -f ".env" ]; then
    echo_green "Installing env file ..."
    sed -i 's|%USER%|'"${BASE_USER}"'|g;s|%LOG_DIR%|'"${SPOOLMAN_LOG_PATH}"'|g' "${SPOOLMAN_DATA_DIR}/.env"
    cat "${SPOOLMAN_DATA_DIR}/.env" > ".env"
fi

## Step 10: Fix ownership
sudo chown -R pi:pi "${SPOOLMAN_INSTALL_DIR}" "${SPOOLMAN_DATA_DIR}"

## Step 11: Add spoolman to moonraker
echo_green "Updating moonraker config ..."
sed -i 's|%USER%|'"${BASE_USER}"'|g;s|%INSTALL_DIR%|'"${SPOOLMAN_INSTALL_DIR}"'|g;s|%HOST%|'"ratos.local"'|g'\
    "${SPOOLMAN_DATA_DIR}/${SPOOLMAN_DEFAULT_CONF}"
# borrowed from mainsail-crew installers
if [[ -f "${SPOOLMAN_MOONRAKER_CONF_PATH}" ]]; then
    if [[ "$(grep -c "spoolman" "${SPOOLMAN_MOONRAKER_CONF_PATH}")" != "0" ]]; then
        echo_yellow "Update Manager entry already exists in moonraker.conf ..."
        return 0
    fi
    # make sure no file exist
    if [[ -f "/tmp/moonraker.conf" ]]; then
        sudo rm -f /tmp/moonraker.conf
    fi
    sudo -u "${BASE_USER}" \
    cp "${SPOOLMAN_MOONRAKER_CONF_PATH}" "${SPOOLMAN_MOONRAKER_CONF_PATH}.backup" &&
    cat "${SPOOLMAN_MOONRAKER_CONF_PATH}" "${SPOOLMAN_DATA_DIR}/${SPOOLMAN_DEFAULT_CONF}" > /tmp/moonraker.conf &&
    cp -rf /tmp/moonraker.conf "${SPOOLMAN_MOONRAKER_CONF_PATH}"
    sudo rm -f "${SPOOLMAN_MOONRAKER_CONF_PATH}.backup"
else
    echo_red "File 'moonraker.conf' does not exist! ..." || exit 1
fi
# add spoolman to moonraker.asvc
if ! cat /home/"${BASE_USER}"/printer_data/moonraker.asvc | grep "spoolman" &>/dev/null; then
    echo -e "\nspoolman" >> /home/"${BASE_USER}"/printer_data/moonraker.asvc
fi

## Step 12: Leave spoolman dir
popd &> /dev/null || exit 1

## Step 13: leave home dir
popd &> /dev/null || exit 1

## Finish
echo_green "Installing spoolman ... DONE!"
